name: KI update trigger

on:
  push:
    branches:
      - main
    paths:
      - 'source/intro_release_notes/release_notes/known_issues.rst'
      - 'source/intro_release_notes/release_notes_enterprise/*.rst'

jobs:
  notify_slack_on_file_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for accurate diffing of all changes

      - name: Get changed files (for conditional notification)
        id: changed-files
        uses: tj-actions/changed-files@v4
        with:
          files: |
            source/intro_release_notes/release_notes/known_issues.rst
            source/intro_release_notes/release_notes_enterprise/*.rst

      - name: Prepare Slack message content
        id: slack_message_content
        run: |
          # Initialize variables
          MESSAGE_TEXT_CONTENT=""
          FILE_LIST=""

          DELIMITER="EOF_SLACK_MESSAGE"

          REF_TYPE="branch"
          REF_NAME="${{ github.ref_name }}"
          COMMIT_SHA="${{ github.sha }}"
          ACTOR="${{ github.actor }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          REPOSITORY="${{ github.repository }}"
          ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          FILE_LIST=$(git diff --name-only HEAD~1 HEAD | grep -E '^source/intro_release_notes/release_notes/known_issues.rst|source/intro_release_notes/release_notes_enterprise/.*\.rst$' || true)

          if [[ -n "$FILE_LIST" ]]; then
            MESSAGE_TEXT_CONTENT="*File(s) updated in push to \`${REF_NAME}\`!* ðŸš€
            *Repository:* ${{ github.repository }}
            *Committer:* ${{ github.actor }}
            *Commit Message:* \`${COMMIT_MESSAGE}\`
            *Files Changed:*
            \`\`\`
            ${FILE_LIST}
            \`\`\`
            <${ACTION_URL}|View Action Run>"
          fi

          ESCAPED_MESSAGE_TEXT=""
          if [[ -n "$MESSAGE_TEXT_CONTENT" ]]; then
              ESCAPED_MESSAGE_TEXT=$(jq -R -s '.' <<< "$MESSAGE_TEXT_CONTENT")
          fi

          if [[ -n "$ESCAPED_MESSAGE_TEXT" ]]; then
            echo "slack_message_text<<$DELIMITER" >> "$GITHUB_OUTPUT"
            echo "${ESCAPED_MESSAGE_TEXT}" >> "$GITHUB_OUTPUT"
            echo "$DELIMITER" >> "$GITHUB_OUTPUT"
          else
            echo "slack_message_text=" >> "$GITHUB_OUTPUT"
          fi

      - name: Send Slack Notification
        if: success() && steps.slack_message_content.outputs.slack_message_text != ''
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.KI_SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "Known Issues change detected"
            blocks:
              - type: "header"
                text:
                  type: "mrkdwn"
                  text: "Known Issues change detected"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ${{ steps.slack_message_content.outputs.slack_message_text }}
